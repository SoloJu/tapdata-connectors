name: Merge Request CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  pull_request:
    branches: [ "main", "develop", "release-v*.*" ]
  workflow_dispatch:
    inputs:
      mrci_run:
        description: 'MRCI run or not'
        required: true
        type: boolean
        default: false

jobs:

  Get-Current-Branch:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.get_branch.outputs.branch }}
    steps:
      - name: Get OpenSource Branch Name -- Common
        run: |
          echo "BRANCH=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Get OpenSource Branch Name -- Pr
        if: github.event_name == 'pull_request'
        run: |
          echo "BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
      - name: output branch name
        id: get_branch
        run: |
          echo "::set-output name=branch::${{ env.BRANCH }}"

  Get-Stable-Branch:
    runs-on: ubuntu-latest
    needs:
      - Get-Current-Branch
    outputs:
      OPENSOURCE_BRANCH: ${{ steps.set-output.outputs.OPENSOURCE_BRANCH }}
      ENTERPRISE_BRANCH: ${{ steps.set-output.outputs.ENTERPRISE_BRANCH }}
      FRONTEND_BRANCH: ${{ steps.set-output.outputs.FRONTEND_BRANCH }}
      CONNECTORS_BRANCH: ${{ steps.set-output.outputs.CONNECTORS_BRANCH }}
      TAG_NAME: ${{ steps.set-output.outputs.TAG_NAME }}
    steps:
      - name: Checkout Tapdata Opensource
        uses: actions/checkout@v3
        with:
          repository: 'tapdata/tapdata'
          token: ${{ secrets.TAPDATA_ENT_CICD_TOKEN }}
          ref: main
          path: tapdata
          fetch-depth: 0
      - name: Set Tag
        run: |
          cd tapdata
          main_tag=$(git describe --tags | cut -d '-' -f 1)
          current_timestamp=$(date +%s)
          hex_timestamp=$(printf "%X" "$current_timestamp" | tr 'A-F' 'a-f')
          tag_name="$main_tag-$hex_timestamp"
          echo "TAG_NAME=$tag_name" >> $GITHUB_ENV
      - name: Get last stable branch
        id: set-output
        run: |
          OPENSOURCE_BRANCH=main
          ENTERPRISE_BRANCH=main
          CONNECTORS_BRANCH=${{ needs.Get-Current-Branch.outputs.branch }}
          FRONTEND_BRANCH=main
          echo "::set-output name=OPENSOURCE_BRANCH::${OPENSOURCE_BRANCH}"
          echo "::set-output name=ENTERPRISE_BRANCH::${ENTERPRISE_BRANCH}"
          echo "::set-output name=FRONTEND_BRANCH::${FRONTEND_BRANCH}"
          echo "::set-output name=CONNECTORS_BRANCH::${CONNECTORS_BRANCH}"
          echo "::set-output name=TAG_NAME::${TAG_NAME}"

  Sync-Code-to-Office:
    runs-on: ubuntu-latest
    needs:
      - Get-Stable-Branch
    steps:
      - name: Checkout Tapdata Connectors Code
        uses: actions/checkout@v3
        with:
          repository: 'tapdata/tapdata-connectors'
          ref: ${{ needs.Get-Stable-Branch.outputs.CONNECTORS_BRANCH }}
          token: ${{ secrets.TAPDATA_ENT_CICD_TOKEN }}
          path: tapdata-connectors
          fetch-depth: 0
      - name: Checkout Tapdata Application
        uses: actions/checkout@v2
        with:
          repository: 'tapdata/tapdata-application'
          ref: main
          token: ${{ secrets.TAPDATA_ENT_CICD_TOKEN }}
          path: tapdata-application
          fetch-depth: 0
      - name: Push Tapdata Connectors to Gogs
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: |
            bash tapdata-application/build/upgrade.sh --upgrade-code=true --upgrade-code-path=tapdata-connectors --gogs-project-name=tapdata-connectors

  Scan-Connectors:
    runs-on: office-scan
    timeout-minutes: 50
    needs:
      - Sync-Code-to-Office
      - Get-Stable-Branch
    steps:
      - name: Clean Directory
        run: |
          rm -rf ./*
      - name: Checkout Tapdata-Connectors Code
        run: |
          export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"
          git clone -b ${{ needs.Get-Stable-Branch.outputs.CONNECTORS_BRANCH }} --single-branch ${{ secrets.INTERNAL_REPO }}/tapdata/tapdata-connectors.git
          cd tapdata-connectors && git fetch --tags
      - name: Patch Maven Dependens
        run: |
          echo "Gotapd8!" > /tmp/rsync.passwd && chmod 600 /tmp/rsync.passwd
          rsync --delete --password-file=/tmp/rsync.passwd -avz rsync://root@192.168.1.184:873/data/enterprise-temp/tapdata/ /root/.m2/
      - name: Get Tapdata-Connectors Branch Name
        run: |
          echo "CONNECTORS_BRANCH=${{ needs.Get-Stable-Branch.outputs.CONNECTORS_BRANCH }}" >> $GITHUB_ENV
      - name: Build Tapdata-Connectors - And Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.TAPDATA_ENT_CICD_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd tapdata-connectors && mvn clean test -T1C -Dmaven.compile.fork=true && mvn sonar:sonar \
            -Dsonar.projectKey=tapdata-connectors -Dsonar.host.url=${{ secrets.SONAR_HOST }} \
            -Dsonar.login=${{ secrets.SONAR_USER }} -Dsonar.password=${{ secrets.SONAR_PASS }} \
            -Dsonar.branch.name=${{ env.CONNECTORS_BRANCH }}
      - name: Install Dependens
        run: |
          apt install -y jq
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: tapdata-connectors/target/sonar/report-task.txt
